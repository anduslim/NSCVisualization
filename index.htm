<!DOCTYPE HTML>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>Live Sensor Readings Plot</title>

		<script type="text/javascript" src="./js/jquery.min.js"></script>
		<script type="text/javascript" src="./js/jquery.transit.min.js"></script>

		<style type="text/css">
			/* Reset */
			html, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {
				margin: 0;
				padding: 0;
				border: 0;
				font-size: 100%;
				font-weight: normal;
				vertical-align: baseline;
				background: transparent;
			}

		html, body {
			height: 100%;
		}
		
/*
http://desandro.github.io/3dtransforms/docs/cube.html
*/

		#container {
			float: left;
			width: 50%;
			height: 100%;
		}

		#renderarea {
			width: 50%;
			height: 100%;
			position: relative;
			perspective: 1000px;
  			float: right;
  			background: #FFF;
		}

		#cube {
			width: 200px;
			height: 200px;
			transform-style: preserve-3d;
			position: absolute;
			left: 33%;
			top: 33%;
		}

		#cube figure {
			width: 200px;
			height: 200px;
			display: block;
			position: absolute;
			border: 1px solid black;

			font-size: 132pt;
			text-align: center;
		}

		#cube .front  { transform: rotateY(   0deg ) translateZ( 100px ); background: rgba(147,223,184, 0.8) }
		#cube .back   { transform: rotateX( 180deg ) translateZ( 100px ); background: rgba(255,200,186, 0.8) }
		#cube .right  { transform: rotateY(  90deg ) translateZ( 100px ); background: rgba(227,170,214, 0.8) }
		#cube .left   { transform: rotateY( -90deg ) translateZ( 100px ); background: rgba(181,216,235, 0.8) }
		#cube .top    { transform: rotateX(  90deg ) translateZ( 100px ); background: rgba(255,189,216, 0.8) }
		#cube .bottom { transform: rotateX( -90deg ) translateZ( 100px ); background: rgba(255,252,221, 0.8) }

		/* Branding */
		#branding {
			position: absolute;
			right: 10px;
			top: 10px;
			z-index: 1000;
		}

		#branding img {
			height: 60px;
		}
		
		</style>

		<script type="text/javascript">
			
			var chart;
			var lastTimeStamp = 0;
			var dataLen = 100;
			
			function requestData() {
				$.ajax({
					url: 'fetch-from-mysql.php',
					success: function(point) {
						var result = eval(point);
						if (lastTimeStamp != result[0]) {
							// add the point
							var series = chart.series[0]
							var shift = series.data.length > dataLen;
							chart.series[0].addPoint(result, true, shift);

							// Now we find the angles from the three weights.
							// First we find the magnitude:
							var _x = result[2];
							var _y = result[3];
							var _z = result[4];
							magnitude = Math.pow(Math.pow(_x, 2) + Math.pow(_y, 2) + Math.pow(_z, 2), 0.5);
							console.log(result);
							console.log(magnitude);
							_az = Math.atan(_y/_x);
							_ay = Math.acos(_z/magnitude);
							//console.log(_ax)
							console.log(_ay)
							console.log(_az)
							if (isNaN(_ay) || isNaN(_az)){
								return;
							}

							$("#cube").transition({rotateY: _ay + 'rad', rotateZ: _az + 'rad'}, 1000, 'linear');
						}
						// call it again after one second
						setTimeout(requestData, 1000);	
					},
					cache: false
				});
			}
			
			$(function() {
				$(document).ready(function() {
					$('#cube figure').css({translateX:(($('#renderarea').width() - 200)/ 2)+'px'});
					chart = new Highcharts.Chart({
						credits: {
								enabled: false
						},
						chart: {
							renderTo: 'container',
							events: {
								load: requestData
							}
						},
						title: {
							text: 'Sensor Data',
							x: -20 //center
						},
						subtitle: {
							text: 'Sense & Sense-abilities',
							x: -20
						},
						xAxis: {
							title: {
								text: 'Time',
							},
							type: 'datetime',
						},
						yAxis: {
							title: {
								text: 'Noise Level',
							},
						},
						series: [{
							name: 'Noise data',
							data: []
						}]
					});
				});
			});
		</script>
		
	</head>
	<body>
		<script src="./js/highcharts.js"></script>
		<script src="./js/modules/exporting.js"></script>

		<div id="container"></div>
		<div id="renderarea">
			<div id="cube">
				<figure class="front">1</figure>
				<figure class="back">2</figure>
				<figure class="right">3</figure>
				<figure class="left">4</figure>
				<figure class="top">5</figure>
				<figure class="bottom">6</figure>
			</div>
		</div>		
		<div id="branding"><img src="sns-logo.svg" alt="snslogo"/></div>
	</body>
</html>
